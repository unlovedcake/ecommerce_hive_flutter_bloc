def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}


def flutterVersionName = localProperties.getProperty('flutter.versionName')

if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

//localProperties.load(project.rootProject.file('local.properties').newDataInputStream()) 

def flutterApiKey = localProperties.getProperty('flutter.apiKey') 
if (flutterApiKey == null) {
    flutterApiKey = '1.0'
}


apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    namespace "com.ecommerce.hive"
    compileSdkVersion 33
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.ecommerce.hive"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 23
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        // apiKey flutterApiKey
        manifestPlaceholders += [flutterApiKey: flutterApiKey]
      
    }

    flavorDimensions "default"
    productFlavors { 
        production {
            dimension "default"
            resValue "string", "app_name", "Flutter Bloc Crud"
            applicationIdSuffix ""
        }
        staging {
            dimension "default"
            resValue "string", "app_name", "STG Flutter Bloc Crud"
            applicationIdSuffix ".stg"
           
        }        
        development {
            dimension "default"
            resValue "string", "app_name", "DEV Flutter Bloc Crud"
            applicationIdSuffix ".dev"
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    // implementation 'com.google.android.gms:play-services-safetynet:18.0.1'
     implementation 'androidx.browser:browser:1.3.0'
    // implementation 'com.google.firebase:firebase-appcheck-safetynet:16.1.2'
    // implementation 'com.google.firebase:firebase-appcheck-ktx:17.0.1'
    

    implementation("com.google.firebase:firebase-crashlytics-ktx")
    implementation("com.google.firebase:firebase-analytics-ktx")
}
